/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import io.ktor.http.*
import io.ktor.serialization.gson.*
import io.ktor.server.application.*
import io.ktor.server.engine.embeddedServer
import io.ktor.server.netty.Netty
import io.ktor.server.plugins.contentnegotiation.*
import io.ktor.server.plugins.cors.*
import io.ktor.server.request.*
import io.ktor.server.response.*
import io.ktor.server.routing.*
import org.jetbrains.exposed.sql.deleteWhere
import org.jetbrains.exposed.sql.insert
import org.jetbrains.exposed.sql.selectAll
import org.jetbrains.exposed.sql.transactions.transaction
import org.jetbrains.exposed.sql.update

fun main() {
    embeddedServer(Netty, port = 8080) {
        module()
    }.start(wait = true)
}


fun Application.module() {
    // Устанавливаем поддержку CORS
    install(CORS) {
        anyHost() // Разрешаем запросы с любого хоста. Для продакшена рекомендуется указывать конкретные хосты.
        allowMethod(HttpMethod.Get) // Разрешаем GET-запросы
        allowHeader(HttpHeaders.ContentType) // Разрешаем заголовок Content-Type
        allowCredentials = true // Разрешаем использование cookie и авторизации, если нужно
    }

    // Настраиваем сериализацию JSON
    install(ContentNegotiation) {
        gson {
            setPrettyPrinting()
        }
    }

    routing {
        productRoutes() // Маршрут для получения списка товаров
    }
}