/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.1/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)
  id("application")
    // Apply the application plugin to add support for building a CLI application in Java.

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Зависимости для Ktor
    implementation("io.ktor:ktor-server-core-jvm:2.0.0")
    implementation("io.ktor:ktor-server-netty-jvm:2.0.0")

    // Поддержка JSON с использованием Gson
    implementation("io.ktor:ktor-serialization-gson-jvm:2.0.0")

    // Поддержка ContentNegotiation для сериализации
    implementation("io.ktor:ktor-server-content-negotiation-jvm:2.0.0")

    // Стандартная библиотека Kotlin
    implementation("org.jetbrains.kotlin:kotlin-stdlib:1.8.0")

    implementation("ch.qos.logback:logback-classic:1.2.11")

    implementation("org.jetbrains.exposed:exposed-core:0.36.2")
    implementation("org.jetbrains.exposed:exposed-dao:0.36.2")
    implementation("org.jetbrains.exposed:exposed-jdbc:0.36.2")
    implementation("mysql:mysql-connector-java:8.0.27")
    implementation("io.ktor:ktor-server-cors:2.0.0")
    implementation("io.ktor:ktor-server-cors-jvm:2.0.0")
    implementation("org.mindrot:jbcrypt:0.4")
    implementation("io.ktor:ktor-server-auth-jwt:2.0.0")

}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            useKotlinTest("2.0.0")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.AppKt"
}
